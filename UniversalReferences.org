* Universal References

** Introduction

The idea of Universal References (URs) is to *abstract over the origin* of data to have a single representation for all possibilities.

** Other projects

- URI
- IPLD

** Data sources

- Web page
- Git repository
- Server
- Database
- ISBN
- IPFS
- Zeronet
- Onion
- Custom data source (needs to provide a function that returns data)

** Lowest common denominator of all possible data

Data has a *type*, often indicated by a file extension. This should be more flexible. There should be a bunch of functions ~serialize : Data -> t~ that can read Data of type ~t~. This means that getting data isn't only the data, but also the function to decode it.

** Scratch space

It may be a good idea to have our language also be available in URs: Suppose we have some data representing source code from origin ~o~ and a function ~compile~ that compiles the source code, then ~compile o~ would also be an UR of a compiled program. Note that ~compile~ should also take arguments for architecture, etc.
